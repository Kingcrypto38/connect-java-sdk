/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.squareup.connect.models.Money;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Represents an additional recipient (other than the merchant) receiving a portion of this tender.
 */
@ApiModel(description = "Represents an additional recipient (other than the merchant) receiving a portion of this tender.")

public class AdditionalRecipient {
  @JsonProperty("location_id")
  private String locationId = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("amount_money")
  private Money amountMoney = null;

  @JsonProperty("receivable_id")
  private String receivableId = null;

  public AdditionalRecipient locationId(String locationId) {
    this.locationId = locationId;
    return this;
  }

   /**
   * The location ID for a recipient (other than the merchant) receiving a portion of this tender.
   * @return locationId
  **/
  @ApiModelProperty(required = true, value = "The location ID for a recipient (other than the merchant) receiving a portion of this tender.")
  public String getLocationId() {
    return locationId;
  }

  public void setLocationId(String locationId) {
    this.locationId = locationId;
  }

  public AdditionalRecipient description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The description of the additional recipient.
   * @return description
  **/
  @ApiModelProperty(required = true, value = "The description of the additional recipient.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public AdditionalRecipient amountMoney(Money amountMoney) {
    this.amountMoney = amountMoney;
    return this;
  }

   /**
   * The amount of money distributed to the recipient.
   * @return amountMoney
  **/
  @ApiModelProperty(required = true, value = "The amount of money distributed to the recipient.")
  public Money getAmountMoney() {
    return amountMoney;
  }

  public void setAmountMoney(Money amountMoney) {
    this.amountMoney = amountMoney;
  }

  public AdditionalRecipient receivableId(String receivableId) {
    this.receivableId = receivableId;
    return this;
  }

   /**
   * The unique ID for this `AdditionalRecipientReceivable`, assigned by the server.
   * @return receivableId
  **/
  @ApiModelProperty(value = "The unique ID for this `AdditionalRecipientReceivable`, assigned by the server.")
  public String getReceivableId() {
    return receivableId;
  }

  public void setReceivableId(String receivableId) {
    this.receivableId = receivableId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdditionalRecipient additionalRecipient = (AdditionalRecipient) o;
    return Objects.equals(this.locationId, additionalRecipient.locationId) &&
        Objects.equals(this.description, additionalRecipient.description) &&
        Objects.equals(this.amountMoney, additionalRecipient.amountMoney) &&
        Objects.equals(this.receivableId, additionalRecipient.receivableId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationId, description, amountMoney, receivableId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdditionalRecipient {\n");
    
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    amountMoney: ").append(toIndentedString(amountMoney)).append("\n");
    sb.append("    receivableId: ").append(toIndentedString(receivableId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

