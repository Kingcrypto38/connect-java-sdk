/*
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.squareup.connect.models;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.squareup.connect.models.CatalogQueryFilteredItemsCustomAttributeFilter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * 
 */
@ApiModel(description = "")

public class CatalogQueryFilteredItems {
  @JsonProperty("text_filter")
  private String textFilter = null;

  @JsonProperty("search_vendor_code")
  private Boolean searchVendorCode = null;

  @JsonProperty("category_ids")
  private List<String> categoryIds = new ArrayList<String>();

  @JsonProperty("stock_levels")
  private List<String> stockLevels = new ArrayList<String>();

  @JsonProperty("enabled_location_ids")
  private List<String> enabledLocationIds = new ArrayList<String>();

  @JsonProperty("vendor_ids")
  private List<String> vendorIds = new ArrayList<String>();

  @JsonProperty("product_types")
  private List<String> productTypes = new ArrayList<String>();

  @JsonProperty("custom_attribute_filters")
  private List<CatalogQueryFilteredItemsCustomAttributeFilter> customAttributeFilters = new ArrayList<CatalogQueryFilteredItemsCustomAttributeFilter>();

  @JsonProperty("does_not_exist")
  private List<String> doesNotExist = new ArrayList<String>();

  @JsonProperty("sort_order")
  private String sortOrder = null;

  public CatalogQueryFilteredItems textFilter(String textFilter) {
    this.textFilter = textFilter;
    return this;
  }

   /**
   * 
   * @return textFilter
  **/
  @ApiModelProperty(value = "")
  public String getTextFilter() {
    return textFilter;
  }

  public void setTextFilter(String textFilter) {
    this.textFilter = textFilter;
  }

  public CatalogQueryFilteredItems searchVendorCode(Boolean searchVendorCode) {
    this.searchVendorCode = searchVendorCode;
    return this;
  }

   /**
   * 
   * @return searchVendorCode
  **/
  @ApiModelProperty(value = "")
  public Boolean getSearchVendorCode() {
    return searchVendorCode;
  }

  public void setSearchVendorCode(Boolean searchVendorCode) {
    this.searchVendorCode = searchVendorCode;
  }

  public CatalogQueryFilteredItems categoryIds(List<String> categoryIds) {
    this.categoryIds = categoryIds;
    return this;
  }

  public CatalogQueryFilteredItems addCategoryIdsItem(String categoryIdsItem) {
    this.categoryIds.add(categoryIdsItem);
    return this;
  }

   /**
   * 
   * @return categoryIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getCategoryIds() {
    return categoryIds;
  }

  public void setCategoryIds(List<String> categoryIds) {
    this.categoryIds = categoryIds;
  }

  public CatalogQueryFilteredItems stockLevels(List<String> stockLevels) {
    this.stockLevels = stockLevels;
    return this;
  }

  public CatalogQueryFilteredItems addStockLevelsItem(String stockLevelsItem) {
    this.stockLevels.add(stockLevelsItem);
    return this;
  }

   /**
   *  See [CatalogQueryFilteredItemsStockLevel](#type-catalogqueryfiltereditemsstocklevel) for possible values
   * @return stockLevels
  **/
  @ApiModelProperty(value = " See [CatalogQueryFilteredItemsStockLevel](#type-catalogqueryfiltereditemsstocklevel) for possible values")
  public List<String> getStockLevels() {
    return stockLevels;
  }

  public void setStockLevels(List<String> stockLevels) {
    this.stockLevels = stockLevels;
  }

  public CatalogQueryFilteredItems enabledLocationIds(List<String> enabledLocationIds) {
    this.enabledLocationIds = enabledLocationIds;
    return this;
  }

  public CatalogQueryFilteredItems addEnabledLocationIdsItem(String enabledLocationIdsItem) {
    this.enabledLocationIds.add(enabledLocationIdsItem);
    return this;
  }

   /**
   * 
   * @return enabledLocationIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getEnabledLocationIds() {
    return enabledLocationIds;
  }

  public void setEnabledLocationIds(List<String> enabledLocationIds) {
    this.enabledLocationIds = enabledLocationIds;
  }

  public CatalogQueryFilteredItems vendorIds(List<String> vendorIds) {
    this.vendorIds = vendorIds;
    return this;
  }

  public CatalogQueryFilteredItems addVendorIdsItem(String vendorIdsItem) {
    this.vendorIds.add(vendorIdsItem);
    return this;
  }

   /**
   * 
   * @return vendorIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getVendorIds() {
    return vendorIds;
  }

  public void setVendorIds(List<String> vendorIds) {
    this.vendorIds = vendorIds;
  }

  public CatalogQueryFilteredItems productTypes(List<String> productTypes) {
    this.productTypes = productTypes;
    return this;
  }

  public CatalogQueryFilteredItems addProductTypesItem(String productTypesItem) {
    this.productTypes.add(productTypesItem);
    return this;
  }

   /**
   *  See [CatalogItemProductType](#type-catalogitemproducttype) for possible values
   * @return productTypes
  **/
  @ApiModelProperty(value = " See [CatalogItemProductType](#type-catalogitemproducttype) for possible values")
  public List<String> getProductTypes() {
    return productTypes;
  }

  public void setProductTypes(List<String> productTypes) {
    this.productTypes = productTypes;
  }

  public CatalogQueryFilteredItems customAttributeFilters(List<CatalogQueryFilteredItemsCustomAttributeFilter> customAttributeFilters) {
    this.customAttributeFilters = customAttributeFilters;
    return this;
  }

  public CatalogQueryFilteredItems addCustomAttributeFiltersItem(CatalogQueryFilteredItemsCustomAttributeFilter customAttributeFiltersItem) {
    this.customAttributeFilters.add(customAttributeFiltersItem);
    return this;
  }

   /**
   * 
   * @return customAttributeFilters
  **/
  @ApiModelProperty(value = "")
  public List<CatalogQueryFilteredItemsCustomAttributeFilter> getCustomAttributeFilters() {
    return customAttributeFilters;
  }

  public void setCustomAttributeFilters(List<CatalogQueryFilteredItemsCustomAttributeFilter> customAttributeFilters) {
    this.customAttributeFilters = customAttributeFilters;
  }

  public CatalogQueryFilteredItems doesNotExist(List<String> doesNotExist) {
    this.doesNotExist = doesNotExist;
    return this;
  }

  public CatalogQueryFilteredItems addDoesNotExistItem(String doesNotExistItem) {
    this.doesNotExist.add(doesNotExistItem);
    return this;
  }

   /**
   *  See [CatalogQueryFilteredItemsNullableAttribute](#type-catalogqueryfiltereditemsnullableattribute) for possible values
   * @return doesNotExist
  **/
  @ApiModelProperty(value = " See [CatalogQueryFilteredItemsNullableAttribute](#type-catalogqueryfiltereditemsnullableattribute) for possible values")
  public List<String> getDoesNotExist() {
    return doesNotExist;
  }

  public void setDoesNotExist(List<String> doesNotExist) {
    this.doesNotExist = doesNotExist;
  }

  public CatalogQueryFilteredItems sortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   *  See [SortOrder](#type-sortorder) for possible values
   * @return sortOrder
  **/
  @ApiModelProperty(value = " See [SortOrder](#type-sortorder) for possible values")
  public String getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogQueryFilteredItems catalogQueryFilteredItems = (CatalogQueryFilteredItems) o;
    return Objects.equals(this.textFilter, catalogQueryFilteredItems.textFilter) &&
        Objects.equals(this.searchVendorCode, catalogQueryFilteredItems.searchVendorCode) &&
        Objects.equals(this.categoryIds, catalogQueryFilteredItems.categoryIds) &&
        Objects.equals(this.stockLevels, catalogQueryFilteredItems.stockLevels) &&
        Objects.equals(this.enabledLocationIds, catalogQueryFilteredItems.enabledLocationIds) &&
        Objects.equals(this.vendorIds, catalogQueryFilteredItems.vendorIds) &&
        Objects.equals(this.productTypes, catalogQueryFilteredItems.productTypes) &&
        Objects.equals(this.customAttributeFilters, catalogQueryFilteredItems.customAttributeFilters) &&
        Objects.equals(this.doesNotExist, catalogQueryFilteredItems.doesNotExist) &&
        Objects.equals(this.sortOrder, catalogQueryFilteredItems.sortOrder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(textFilter, searchVendorCode, categoryIds, stockLevels, enabledLocationIds, vendorIds, productTypes, customAttributeFilters, doesNotExist, sortOrder);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogQueryFilteredItems {\n");
    
    sb.append("    textFilter: ").append(toIndentedString(textFilter)).append("\n");
    sb.append("    searchVendorCode: ").append(toIndentedString(searchVendorCode)).append("\n");
    sb.append("    categoryIds: ").append(toIndentedString(categoryIds)).append("\n");
    sb.append("    stockLevels: ").append(toIndentedString(stockLevels)).append("\n");
    sb.append("    enabledLocationIds: ").append(toIndentedString(enabledLocationIds)).append("\n");
    sb.append("    vendorIds: ").append(toIndentedString(vendorIds)).append("\n");
    sb.append("    productTypes: ").append(toIndentedString(productTypes)).append("\n");
    sb.append("    customAttributeFilters: ").append(toIndentedString(customAttributeFilters)).append("\n");
    sb.append("    doesNotExist: ").append(toIndentedString(doesNotExist)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

